package project1;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;

class Tests {
	public static void runTests()
	{
		System.out.println("Running Tests:");
		
		//64 1s "1111111111111111111111111111111111111111111111111111111111111111"
		//56 1s "11111111111111111111111111111111111111111111111111111111"
		//56 0s "00000000000000000000000000000000000000000000000000000000"
		//64 0s "0000000000000000000000000000000000000000000000000000000000000000"
		
		System.out.println("Output for: encryption(all ones, all ones)");
		System.out.println(Conversions.encryptBlock("1111111111111111111111111111111111111111111111111111111111111111"
				, "11111111111111111111111111111111111111111111111111111111"));
		
		
		System.out.println("Output for: encryption(all zeros, all ones)");
		System.out.println(Conversions.encryptBlock("0000000000000000000000000000000000000000000000000000000000000000"
				, "11111111111111111111111111111111111111111111111111111111"));
		
		
		System.out.println("Output for: encryption(all zeros, all zeros)");
		System.out.println(Conversions.encryptBlock("0000000000000000000000000000000000000000000000000000000000000000"
				, "00000000000000000000000000000000000000000000000000000000"));
		
		
		System.out.println("Output for: encryption(block, all ones), where: \n"
				+ "block = 1100110010000000000001110101111100010001100101111010001001001100");
		System.out.println(Conversions.encryptBlock("1100110010000000000001110101111100010001100101111010001001001100"
				, "00000000000000000000000000000000000000000000000000000000"));
		
		System.out.println("Output for: decryption(all ones, all ones)");
		Conversions.decryptBlock("1111111111111111111111111111111111111111111111111111111111111111", 
				"11111111111111111111111111111111111111111111111111111111");
		
		System.out.println("Output for: decryption(all zeros, all ones)");
		Conversions.decryptBlock("0000000000000000000000000000000000000000000000000000000000000000", 
				"11111111111111111111111111111111111111111111111111111111");
		
		System.out.println("Output for: decryption(all zeros, all zeros)");
		Conversions.decryptBlock("0000000000000000000000000000000000000000000000000000000000000000",
				"00000000000000000000000000000000000000000000000000000000");
		
		System.out.println("Output for: decryption(block, all ones), where: \n"
				+ "block = 0101011010001110111001000111100001001110010001100110000011110101");
		Conversions.decryptBlock("0101011010001110111001000111100001001110010001100110000011110101",
				"11111111111111111111111111111111111111111111111111111111");
		
		System.out.println("Output for: decryption(block, all ones), where: \n"
				+ "block = 0011000101110111011100100101001001001101011010100110011111010111");
		Conversions.decryptBlock("0011000101110111011100100101001001001101011010100110011111010111",
				"00000000000000000000000000000000000000000000000000000000");
		
	}


}
